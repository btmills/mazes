"use strict";function random(){var e=1e4*Math.sin(random.seed++);return e-Math.floor(e)}var Grid=function(e){function t(e){return arguments.length>0&&(y.canvas.height=e),y.canvas.height}function n(e){return arguments.length>0&&(y.canvas.width=e),y.canvas.width}function r(e){return arguments.length>0&&t(e*c+(e+1)*f),(t()-f)/(c+f)}function o(e){return arguments.length>0&&n(e*c+(e+1)*f),(n()-f)/(c+f)}function i(e){return f/2+e*(f+c)}function u(e,t){return(e%t+t)%t}function l(e){return u(e-f,c+f)>=c-f?null:Math.floor((e-f)/(c+f))}function a(){y.clearRect(0,0,n(),t())}function s(e,t,n){var r=y.fillStyle;y.fillStyle=n,y.fillRect(i(e)+f/2,i(t)+f/2,c,c),y.fillStyle=r}function d(e,t,n,r,o){if(Math.abs(n-e)+Math.abs(r-t)!==1)throw new Error("Squares are not adjacent.");var u=Math.max(e,n),l=Math.max(t,r),a=y.lineCap,s=y.lineWidth,d=y.strokeStyle;y.lineCap="square",y.lineWidth=f,y.strokeStyle=o,y.beginPath(),e===n?(y.moveTo(i(e)+f,i(l)),y.lineTo(i(e+1)-f,i(l))):(y.moveTo(i(u),i(t)+f),y.lineTo(i(u),i(t+1)-f)),y.stroke(),y.lineCap=a,y.lineWidth=s,y.strokeStyle=d}function h(e,t,n,r){var o=y.lineCap,u=y.lineWidth,l=y.strokeStyle;y.lineCap="round",y.lineWidth=f,y.strokeStyle="#16191d",y.beginPath(),y.moveTo(i(e),i(t)),y.lineTo(i(n),i(r)),y.stroke(),y.lineCap=o,y.lineWidth=u,y.strokeStyle=l}var c=20,f=2,y=e.getContext("2d");return{height:r,width:o,pixelHeight:t,pixelWidth:n,clear:a,fill:s,bridge:d,line:h,toPixels:i,toSquares:l}};random.seed=Math.random();var Maze=function(e,t){function n(e){return Math.floor(random()*e)}function r(e){return e[n(e.length)]}function o(e){return e[e.length-1]}function i(n,r){switch(r){case"north":return n.y>0?{x:n.x,y:n.y-1}:null;case"south":return n.y<t-1?{x:n.x,y:n.y+1}:null;case"east":return n.x<e-1?{x:n.x+1,y:n.y}:null;case"west":return n.x>0?{x:n.x-1,y:n.y}:null;default:throw new Exception("Invalid direction "+dir)}}function u(e){return x.reduce(function(t,n){return t[n]=i(e,n),t},{})}function l(e,t){return Math.abs(t.x-e.x)+Math.abs(t.y-e.y)>1?null:e.x<t.x?"east":t.x<e.x?"west":e.y<t.y?"south":t.y<e.y?"north":void 0}function a(){function n(e){return v[e.x][e.y]}function o(e){return e=n(e),x.every(function(t){return e[t]!==!0})}function a(e,t){v[e.x][e.y][l(e,t)]=!0,v[t.x][t.y][l(t,e)]=!0}function s(n){var r=n.x,o=n.y;if(0===r)v[r][o].west=!0;else if(0===o)v[r][o].north=!0;else if(r===e-1)v[r][o].east=!0;else{if(o!==t-1)throw new Error("Destination not on edge.");v[r][o].south=!0}}function d(e){var t,n,l,h;if(e.x===y.x&&e.y===y.y)return s(e),void console.log("LENGTH",w);for(t=u(e);;){if(n=Object.keys(t).filter(function(e){return t[e]}).filter(function(t){return o(i(e,t))}),!n.length)break;l=r(n),h=t[l],a(e,h),w++,d(h),w--}}var h,c,f,y,v=[],m=[],w=0;for(h=0;e>h;h++)for(v[h]=[],c=0;t>c;c++)(0===h||0===c||h===e-1||c===t-1)&&m.push({x:h,y:c}),v[h][c]={north:c>0?!1:null,south:t-1>c?!1:null,west:h>0?!1:null,east:e-1>h?!1:null};f=r(m),g.push(f);do y=r(m);while(f.x===y.x||f.y===y.y);return s(f),d(f),{mesh:v,start:f,end:y}}function s(n,r){if(0===n.x)y.bridge(n.x-1,n.y,n.x,n.y,r);else if(0===n.y)y.bridge(n.x,n.y-1,n.x,n.y,r);else if(n.x===e-1)y.bridge(n.x,n.y,n.x+1,n.y,r);else{if(n.y!==t-1)throw new Error("Square is not on edge.");y.bridge(n.x,n.y,n.x,n.y+1,r)}}function d(n){var r,o;for(y=new Grid(n),y.clear(),y.width(e),y.height(t),r=0;e>r;r++)for(o=0;t>o;o++)f.mesh[r][o].west||y.line(r,o,r,o+1),f.mesh[r][o].north||y.line(r,o,r+1,o),r!==e-1||f.mesh[r][o].east||y.line(r+1,o,r+1,o+1),o!==t-1||f.mesh[r][o].south||y.line(r,o+1,r+1,o+1);y.fill(f.start.x,f.start.y,v),y.fill(f.end.x,f.end.y,m),s(f.start,v),s(f.end,m)}function h(e){var t,n=o(g),r=g[g.length-2];return f.mesh[n.x][n.y][e]&&(t=i(n,e))?(r&&t.x===r.x&&t.y===r.y?(y.bridge(n.x,n.y,t.x,t.y,m),y.fill(n.x,n.y,m),g.pop()):(y.bridge(n.x,n.y,t.x,t.y,v),y.fill(t.x,t.y,v),g.push(t)),t.x===f.end.x&&t.y===f.end.y?(s(t,v),!0):!1):!1}function c(e){var t=o(g),n=l(t,e);n&&h(n)}var f,y,x=["north","south","east","west"],v="#4ecdc4",m="#ff6b6b",g=[],w=function(){var e,t;return function(n,r){n=y.toSquares(n),r=y.toSquares(r),null===n||null===r||n===e&&r===t||(e=n,t=r,c({x:n,y:r}))}}();return f=a(),{render:d,move:h,hover:w}};!function(){function e(){var e=+document.getElementById("width").value,n=+document.getElementById("height").value,r="#"+e+"x"+n+"s"+random.seed,o=window.location.href.split("#")[0]+r;document.getElementById("permalink").setAttribute("href",o),t=new Maze(e,n),t.render(document.getElementById("canvas"))}var t;document.getElementById("generate").addEventListener("click",function(t){t.preventDefault(),e()}),document.body.addEventListener("keyup",function(e){var n=e.key||e.charCode||e.keyCode,r=["west","north","east","south"][n-37];r&&(e.preventDefault(),t.move(r))});var n=/#(\d+)x(\d+)(?:s(\d+.\d+))?|.*/.exec(window.location.hash),r=n[1],o=n[2],i=n[3];r&&o&&(document.getElementById("width").value=r,document.getElementById("height").value=o),i&&(random.seed=parseFloat(i));var u=document.getElementById("canvas");u.addEventListener("mousemove",function(e){t.hover(e.layerX,e.layerY)}),e()}();
//# sourceMappingURL=app.min.js.map